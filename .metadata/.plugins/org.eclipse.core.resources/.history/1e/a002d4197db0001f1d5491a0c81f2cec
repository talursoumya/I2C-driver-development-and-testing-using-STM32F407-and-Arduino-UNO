/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#define RCC_BASE_ADDR       0x40023800UL

#define RCC_CFGR_REG_OFFSET 0x08UL

#define RCC_CFGR_REG_ADDR   (RCC_BASE_ADDR)+(RCC_CFGR_REG_OFFSET)

#define GPIO_BASE_ADDR      0x40020000UL

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	//Step 1.
	//RCC CFGR register Set 21st and 22nd bits as zero,to select HSI as clock source

       uint32_t *pRccCfgrReg =(uint32_t*)RCC_CFGR_REG_ADDR;
        *pRccCfgrReg &= ~(0x3<<21);

        //configure MCO1 prescaler=4
        //*pRccCfgrReg |= (1<<24);
        *pRccCfgrReg |= (1<<25);
        *pRccCfgrReg |= (1<<26);

    //Step 2.
    //  Configure PA8 to AF0 mode to behave as MCO1 signal


    // a)Enable the peripheral clock for GPIO peripheral
                uint32_t *pRCCAhb1Enr = (uint32_t*)(RCC_BASE_ADDR+0x30);
                //Enable GPIO peripheral clock
                *pRCCAhb1Enr |=(1<<0);

	//	b)Configure the mode of GPIOA pin8 as alternate function mode
                uint32_t *pGPIOAModeReg = (uint32_t*)(GPIO_BASE_ADDR+00);
                *pGPIOAModeReg &= ~(0x3 <<16);//clear
                *pGPIOAModeReg |= (0x2 << 16);//set

	//	c)configure the alteration function register to set the mode 0 PAB
                uint32_t *pGIOAAltFunHighReg =(uint32_t*)(GPIO_BASE_ADDR+0X24);
                *pGIOAAltFunHighReg &= ~(0xf <<0);
    /* Loop forever */
	for(;;);
}
